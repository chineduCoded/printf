.\" Automatically generated by Pandoc 2.5
.\"
.TH "_PRINTF" "1" "October 2022" "_printf 1.0" ""
.hy
.SH NAME
.PP
_printf \- custom version for printf function.
.SH SYNOPSIS
.PP
_printf FORMART [ARGUMENT]\&... int _printf(const char *[FORMAT],
\&...);
.SH DESCRIPTION
.PP
Prints ARGUMENT(s) based on FORMAT A custom _printf for learning
purposes.
Format specifiers (beginning with %), the additional arguments following
format are formatted and inserted._printf function format string is a
character string, beginning and ending in its initial shift state, if
any.
These arguments are placed using the percentage `%' operator.
**_printf** will also take an indefinite amount of arguments.
.SH EXAMPLE
.PP
_printf(\[lq]%s\[rq], text); \- In these Example, _printf the value of
text with %s give the format of text.
.PP
\f[B]Conversion Specifiers\f[R] %c \- prints character. %s \- prints
string. %d \- prints decimal. %% \- prints percentage. %i \- prints
integer number. %b \- prints binary number. %x \- printds hexadecimal.
and so on.
.SH BUGS
.PP
I should think so.
.SH SEE ALSO
.PP
printf (3)
.SH AUTHORS
Chinedu Elijah Okoronkwo and Miracle Amarachi Okeosisi.
